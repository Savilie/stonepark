# docker-compose.yml

services:
  db:
    image: mysql:latest
    container_name: "db_cont"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=stonepark
    volumes:
      - my_mysql_volume:/var/lib/mysql

  django_app:
    image: backend_app
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django_cont
    restart: always
    env_file:
      - backend/.env
    volumes:
      - static_volume:/app/backend/staticfiles  # Для продакшена
      - media_volume:/app/backend/media  # Для разработки
    ports:
      - "8000:8000"
    depends_on:
      - db
  
  redis:
    image: redis
    ports:
      - "6379:6379"

  nginx:
    build:
      context: .
      dockerfile: Dockerfile
    image: nginx
    container_name: "nginx_cont"
    restart: always
    volumes:
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    ports:
      - 80:80
      - 443:443
    depends_on:
      - django_app

  certbot:
    image: certbot/certbot:latest
    container_name: "certbot_cont"
    env_file:
      - .env
    # remove flag "--staging" to make real SSL (not for tests)
    command: certonly --webroot --webroot-path=/var/www/html/ --agree-tos --email ${CERTBOT_EMAIL} -d palitrakamnya.ru -d www.palitrakamnya.ru
    volumes:
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    depends_on:
      - nginx

volumes:
  static_volume:
  my_mysql_volume:
  media_volume:
  www-html:
  etc-letsencrypt:

